saveHandler = {}

saveHandler.VERSION = {1, 1, 0}

#include !/common/constants
#include !/common/tableUtil
#include !/common/stringUtil
#include !/common/utils

#include component
#include game
#include log
#include task
#include error

#include achievement
#include character
#include enhancement
#include event
#include party
#include preparation
#include prosperity
#include quest
#include retirement
#include sanctuary
#include scenario
#include shop
#include unlocked

saveHandler.SAVE_FILE = "Savefile"

function saveHandler.loadAll()
  local saveFile = Utils.readNotebook(saveHandler.SAVE_FILE)

  if not saveFile then
    Log.error("No notebook found containing the save file!"
              .. " Please add a notebook named " .. saveHandler.SAVE_FILE .. ".")
    return
  end

  local status, content = pcall(function() return JSON.decode(saveFile) end)
  if not status then
    Log.error("The provided save file contains errors."
              .. " The error message from Lua is also very cryptic and doesn't really help. :-("
              .. " Make sure your save file is a valid JSON file and try again."
              .. "\n" .. content)
    return
  end

  Preparation.start(function() saveHandler.doLoadAll(content) end)
end

function saveHandler.loadFromURL(url)
  -- requires RAW JSON returned form url
  WebRequest.get(url,
  function(webReturn)
      if webReturn.is_error then
        log(webReturn.error)
        return
      elseif webReturn.response_code ~= 200 then
        log("Error loading from URL")
        log("Response Status Code: " .. webReturn.response_code)
        return
      end
      saveFile=webReturn.text
      local content = JSON.decode(saveFile)
      Preparation.start(function() saveHandler.doLoadAll(content) end)
    end)
end

function saveHandler.loadFromGist(gist)
  WebRequest.get('https://api.github.com/gists/'..gist,
  function(webReturn)
      if webReturn.is_error then
        log(webReturn.error)
        return
      elseif webReturn.response_code ~= 200 then
        log("Error loading from GIST")
        log("Response Status Code: " .. webReturn.response_code)
        return
      end
      saveFile=webReturn.text
      local gistJSON = JSON.decode(saveFile)
      for filename, fileDetails in pairs(gistJSON.files) do
      if not fileDetails.truncated then
        local content = JSON.decode(fileDetails.content)
        Preparation.start(function() saveHandler.doLoadAll(content) end)
      else
        broadcastToAll("Content Truncated.  Loading Failed")
        -- TODO:  Determine if I need to and how to handle Content Truncated.
      end
        -- TODO:  Determine if I need to handle more than first file.
        break
      end
    end)
end


function saveHandler.doLoadAll(content)
  if content.global then
    Scenario.loadAll(content.global.scenarios)
    Achievement.loadAll(content.global.achievements)
    Prosperity.load(content.global.prosperity)
  end
  Unlocked.loadAll(content.unlocked)
  Party.load(content.party)
  Retirement.load(content.retired)
  Shop.load()
  Event.loadAll(content.events)
  Enhancement.loadAll(content.enhancements)
end


function saveHandler.saveAll()
  local saveFile = saveHandler.createSaveFile()

  Wait.time(function()
              local content = JSON.encode_pretty(saveFile)
              Notes.addNotebookTab({ title="New Savefile", body=content })
            end, 3)
end

function saveHandler.saveWebLocal(gist)
  saveHandler.saveWeb(gist, 'http://localhost:7071/api/UploadSaveFile')
end


function saveHandler.saveWeb(gist, url)
  local saveFile = saveHandler.createSaveFile()

  if url == nil then
    url = 'https://gloomhavensaveloader.azurewebsites.net/api/UploadSaveFile'
  end

  if gist ~= nil then
    url = url .. "/" .. gist
  end

  Wait.time(function()
              local content = JSON.encode_pretty(saveFile)
              WebRequest.post(url,
              content, function(webReturn)
                if webReturn.is_error then
                  log("Error attempting to save to web")
                  log(webReturn.error)
                elseif webReturn.response_code ~= 200 then
                  log("Error attempting to save to web")
                  log("Response Status Code: " .. webReturn.response_code)
                else
                  log(webReturn.text)
                  Notes.setNotes(webReturn.text)
                end
              end)
            end, 5)
end

function saveHandler.createSaveFile()
  local saveFile = {}

  Preparation.prepareSave()
  -- TODO change to task based, this wait is necessary, because the scripting zones have to be
  -- adjusted, otherwise they won't detect cards lying on the table
  Wait.time(function() saveHandler.doCreateSaveFile(saveFile) end, 1)

  return saveFile
end


function saveHandler.doCreateSaveFile(saveFile)
  saveFile.global = {
    prosperity = Prosperity.save(),
    scenarios = Scenario.save(),
  }
  Achievement.saveAll(saveFile.global)
  saveFile.unlocked = Unlocked.saveAll()
  saveFile.party = Party.save()
  saveFile.enhancements = Enhancement.save()
  saveFile.retired = Retirement.save()
  saveFile.events = Event.save()
end
